/*
Copyright 2025.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	apiv1alpha1 "github.com/gke-labs/orchestra/api/v1alpha1"
	labels "k8s.io/apimachinery/pkg/labels"
	listers "k8s.io/client-go/listers"
	cache "k8s.io/client-go/tools/cache"
)

// MultiKubernetesClusterPlacementLister helps list MultiKubernetesClusterPlacements.
// All objects returned here must be treated as read-only.
type MultiKubernetesClusterPlacementLister interface {
	// List lists all MultiKubernetesClusterPlacements in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*apiv1alpha1.MultiKubernetesClusterPlacement, err error)
	// MultiKubernetesClusterPlacements returns an object that can list and get MultiKubernetesClusterPlacements.
	MultiKubernetesClusterPlacements(namespace string) MultiKubernetesClusterPlacementNamespaceLister
	MultiKubernetesClusterPlacementListerExpansion
}

// multiKubernetesClusterPlacementLister implements the MultiKubernetesClusterPlacementLister interface.
type multiKubernetesClusterPlacementLister struct {
	listers.ResourceIndexer[*apiv1alpha1.MultiKubernetesClusterPlacement]
}

// NewMultiKubernetesClusterPlacementLister returns a new MultiKubernetesClusterPlacementLister.
func NewMultiKubernetesClusterPlacementLister(indexer cache.Indexer) MultiKubernetesClusterPlacementLister {
	return &multiKubernetesClusterPlacementLister{listers.New[*apiv1alpha1.MultiKubernetesClusterPlacement](indexer, apiv1alpha1.Resource("multikubernetesclusterplacement"))}
}

// MultiKubernetesClusterPlacements returns an object that can list and get MultiKubernetesClusterPlacements.
func (s *multiKubernetesClusterPlacementLister) MultiKubernetesClusterPlacements(namespace string) MultiKubernetesClusterPlacementNamespaceLister {
	return multiKubernetesClusterPlacementNamespaceLister{listers.NewNamespaced[*apiv1alpha1.MultiKubernetesClusterPlacement](s.ResourceIndexer, namespace)}
}

// MultiKubernetesClusterPlacementNamespaceLister helps list and get MultiKubernetesClusterPlacements.
// All objects returned here must be treated as read-only.
type MultiKubernetesClusterPlacementNamespaceLister interface {
	// List lists all MultiKubernetesClusterPlacements in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*apiv1alpha1.MultiKubernetesClusterPlacement, err error)
	// Get retrieves the MultiKubernetesClusterPlacement from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*apiv1alpha1.MultiKubernetesClusterPlacement, error)
	MultiKubernetesClusterPlacementNamespaceListerExpansion
}

// multiKubernetesClusterPlacementNamespaceLister implements the MultiKubernetesClusterPlacementNamespaceLister
// interface.
type multiKubernetesClusterPlacementNamespaceLister struct {
	listers.ResourceIndexer[*apiv1alpha1.MultiKubernetesClusterPlacement]
}
